# SonarQube Environment Variables

# Database Configuration
POSTGRES_USER=sonar
POSTGRES_PASSWORD=sonar
POSTGRES_DB=sonar

# SonarQube Database Connection
SONARQUBE_JDBC_URL=jdbc:postgresql://db:5432/sonar
SONARQUBE_JDBC_USERNAME=sonar
SONARQUBE_JDBC_PASSWORD=sonar

# SonarQube Server Configuration
SONAR_WEB_PORT=9000
SONAR_WEB_HOST=0.0.0.0

# SonarQube Token (generate a token in SonarQube and add it here)
SONARQUBE_TOKEN=

# Elasticsearch Configuration
SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true

# JVM Memory Configuration (adjust based on your system's resources)
SONAR_WEB_JAVA_OPTS=-Xmx1g -Xms256m -XX:+HeapDumpOnOutOfMemoryError -Djava.net.preferIPv4Stack=true
SONAR_CE_JAVA_OPTS=-Xmx2g -Xms1g -XX:+HeapDumpOnOutOfMemoryError -Djava.net.preferIPv4Stack=true
SONAR_SEARCH_JAVA_OPTS=-Xms512m -Xmx512m -XX:+UseG1GC -Djava.net.preferIPv4Stack=true -XX:MaxDirectMemorySize=256m

# Logging Configuration
SONAR_LOG_LEVEL=INFO

# Timezone (adjust to your local timezone)
TZ=Europe/London

# Project Name (for volume naming)
COMPOSE_PROJECT_NAME=sonarqube-local

# PostgreSQL Configuration
POSTGRES_INITDB_ARGS="--encoding=UTF-8 --lc-collate=en_US.UTF-8 --lc-ctype=en_US.UTF-8"

# Security Note:
# In production, use strong passwords and consider using Docker secrets or external secret management
# Example production passwords:
# POSTGRES_PASSWORD=<strong-db-password>
# SONARQUBE_JDBC_PASSWORD=<strong-sonar-password>
